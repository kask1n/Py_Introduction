# Задача 12: Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница.
# Петя помогает Кате по математике. Он задумывает два натуральных числа X и Y
# (X,Y≤1000), а Катя должна их отгадать. Для этого Петя делает две подсказки.
# Он называет сумму этих чисел S и их произведение P.
# Помогите Кате отгадать задуманные Петей числа.
#
# 4 4 -> 2 2
# 5 6 -> 2 3
# ------------------------------------------------------

flag = True
while flag:
    summ = int(input(f"Введите сумму натуральных чисел (2≤S≤2000): "))
    if 1 < summ <= 2000:  # (1, 2000]
        flag = False
    else:
        print("-> Введено некорректное число!")

flag = True
while flag:
    prod = int(input(f"Введите произведение натуральных чисел (1≤P≤1000000): "))
    if 0 < prod <= 1000000:  # (0, 1000000]
        flag = False
    else:
        print("-> Введено некорректное число!")

# ------------------------------------------------------
#
# flag = True
# for x in range(summ):  # [0, summ)  # Решение преподавателя методом перебора (до миллиона итераций).
#     for y in range(prod):  # [0, prod)
#         if summ == x + y and prod == x * y:
#             print(f"Искомые числа X и Y: {x, y}")
#             flag = False
# if flag:
#     print("-> Целочисленных решений нет.")
#
# ------------------------------------------------------
#
# flag = True
# for x in range(1, 1001):  # [1, 1000]  # НАШЕ РЕШЕНИЕ В ГРУППЕ методом перебора (до тысячи итераций).
#     if prod % x == 0:
#         y = int(prod / x)  # Округление результата выражения до целого в меньшую сторону через int().
#         if y == summ - x:
#             print(f"-> Искомые числа X и Y: ({x}, {y})")
#             flag = False
#
# if flag:
#     print("-> Решений нет (но это неточно).")
#
# ------------------------------------------------------
#
# from math import sqrt  # СВОЁ РЕШЕНИЕ: Общий случай решения через дискриминант без перебора значений.
#
# dis = (-summ) ** 2 - 4 * prod  # Вычисление D (a = 1, т.к. частный случай кв. уравнения: x^2 - s*x + p = 0).
#
# if dis > 0:
#     x1 = (-(-summ) + sqrt(dis)) / 2  # Нахождение корня dis через функцию math.sqrt().
#     y1 = summ - x1
#     x2 = (-(-summ) - dis ** 0.5) / 2  # Нахождение корня dis через степень (**).
#     y2 = summ - x2
#
#     print("-> Искомые числа X и Y:", end='')
#
#     # flag = True
#     if x1 % 1 == 0 and y1 % 1 == 0:  # Проверка на целое через остаток от деления на 1.
#         print(f" ({round(x1)}, {round(y1)})", end='')
#         # flag = False
#     # if not x1 == y2 and x2 % 1 == 0 and y2 % 1 == 0:  # x1 == y2 всегда True, т.е. условие не имеет смысла.
#     #     print(f" ({round(x2)}, {round(y2)})", end='')
#     #     flag = False
#     # if flag:
#     else:
#         print("\n-> Целочисленных решений нет.")
#
# elif dis == 0:
#     x = -(-summ) / 2
#     y = summ - x
#
#     if x == round(x) and y == round(y):  # Проверка на целое через функцию round().
#         print(f"-> Искомые числа X и Y: ({round(x)}, {round(y)})")
#     else:
#         print("-> Целочисленных решений нет.")
#
# else:
#     print("-> Решений нет.")
#
# ------------------------------------------------------
# СВОЁ РЕШЕНИЕ: Частный случай решения через дискриминант без перебора значений.

dis = (-summ) ** 2 - 4 * prod  # Вычисление D (a = 1, т.к. частный случай кв. уравнения: x^2 - s*x + p = 0).

if dis >= 0:  # Случай D>0 отдельно не рассматриваем, т.к. первая пара (х1,y1) всегда равна второй (y2,x2).
    x = (-(-summ) + dis ** 0.5) / 2  # Нахождение корня dis через степень (**).
    y = summ - x

    if x == round(x):  # Проверка на целое через функцию round(). Если x - целое, то y - всегда будет целым.
        print(f"-> Искомые числа X и Y: ({round(x)}, {round(y)})")
    else:
        print("-> Целочисленных решений нет.")
else:
    print("-> Решений нет.")
