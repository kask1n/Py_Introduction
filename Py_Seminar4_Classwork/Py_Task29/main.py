# Задача №29. Решение в группах.
# Ваня и Петя поспорили, кто быстрее решит следующую задачу:
# Задана последовательность неотрицательных целых чисел.
# Требуется определить значение наибольшего элемента последовательности,
# которая завершается первым встретившимся нулем (число 0 не входит в последовательность).
# Однако 2 друга оказались не такими смышлеными.
# Никто из ребят не смог до конца сделать это задание.
# Они решили так: у кого будет меньше ошибок в коде, тот и выиграл спор.
# За помощью товарищи обратились к Вам, студентам.
# ------------------------------------------------------

# ВАНЯ:
# n = int(input())
# max_number = 1000  # Если не войдёт в цикл, то распечатает 1000 (ошибка 1).
# while n != 0:
#     n = int(input())
#     if max_number > n:  # Если число меньше максимального, то перезапись максимального (логика, ошибка 2).
#     max_number = n  # Строка должна быть вложена в if (нет отступа, ошибка 3).
# print(max_number)

# ПЕТЯ:
# n = int(input())
# max_number = -1  # Если не войдёт в цикл, то распечатает -1 (ошибка 1).
# while n < 0:  # Некорректное условие, т.к. n д.б. НЕ отрицательным (ошибка 2).
#     n = int(input())
#     if max_number < n:
#     n = max_number  # Строка д.б. вложена в if (нет отступа, ошибка 3). Переменные перепутаны (ошибка 4).
# print(n)  # Вместо n требуется распечатать max_number (ошибка 5).

# ОТВЕТ: У Вани ошибок меньше, чем у Пети (3 против 5). Победил Ваня.
# ------------------------------------------------------

# КАК ДОЛЖНО БЫТЬ:

max_number = 0

flag = True
while flag:
    try:
        n = int(input("Введите неотрицательное число: "))

        if n > 0:
            if max_number < n:
                max_number = n
        elif n == 0:
            flag = False
        else:
            print("-> ОШИБКА: Введено отрицательное число!")

    except ValueError:
        print("-> ОШИБКА: Введено некорректное значение!")

if max_number == 0:
    print("-> Условие для нахождения наибольшего элемента последовательности не выполнено.")
else:
    print(f"-> Наибольший элемент последовательности, которая завершается первым встретившимся 0 = {max_number}")
